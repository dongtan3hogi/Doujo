<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit.doujo.dao.friendDao">
	
	<!-- 친구 수락하기(등록하기) -->  
	<insert id="insertMyFriend" parameterType="friend">
		insert into friend (USERID, FRIENDID, NICKNAME, NAME, GENDER, AGE, JOB, HOBBY) 
		values (#{userid}, #{friendid}, #{nickname}, #{name}, #{gender}, #{age}, #{job}, #{hobby})
	</insert>
	

	<select id="getRecommendFriendsCount" parameterType="map" resultType="int">
		select 
			count(*)
		from 
			member 
		<if test="searchItem == 'id'">
		where 
			id like '%' || #{searchWord} || '%'
		</if>
		<if test="searchItem == 'hobby'">
		where 
			hobby like '%' || #{searchWord} || '%'
		</if>
		<if test="searchItem == 'job'">
		where 
			job like '%' || #{searchWord} || '%'
		</if>
	</select>
	
	<select id="getMyFriendsCount" parameterType="map" resultType="int">
		select 
			count(*)
		from 
			friend 
		<if test="searchItem2 == 'friendid'">
		where 
			friendid like '%' || #{searchWord2} || '%'
		</if>
	</select>
	
	<!-- 현재 페이지 목록 (검색 필터링 후) -->
	<select id="getRecommendFriends" parameterType="map" resultType="member">
		select 
			*
		from 
			member 
		<if test="searchItem == 'id'">
		where 
			id like '%' || #{searchWord} || '%' and id not in #{meme} 
		</if>
		
		<if test="searchItem == 'job'">
		where 
			job like '%' || #{searchWord} || '%' and id not in #{meme} 
		</if>
		<if test="searchItem == 'hobby'">
		where 
			hobby like '%' || #{searchWord} || '%' and id not in #{meme} 
		</if>
	</select>
	
	<select id="getMyFriends" parameterType="map" resultType="friend">
		select 
			a.userid,a.friendid,b.nickname,b.name,b.gender,b.age,b.job,b.hobby,a.type 
		from 
			friend a,member b
		where a.friendid = b.id and a.userid =#{id} 
		<if test="searchItem == 'friendid'">
		and a.friendid like '%' || #{searchWord} || '%'
		</if>
	</select>
   
	
	<update id="acceptFriend" parameterType="String">
		update friend set type=1 where userid= #{0} and friendid= #{1}
	</update>

	<select id="checkFriend" parameterType="String" resultType="int">
		select count(*) from friend where userid= #{0} and friendid= #{1}
	</select>
	
	<!-- 친구목록 불러오기 -->
	<select id="selectFriendLsit" parameterType="String" resultType="friend">
		select * from friend where userid=#{userid}
	</select>
	
		
	<update id="updateMember" parameterType="member" >
		update member set job=#{job}, hobby = #{hobby} where id =#{id} 
	</update>
	
	<select id="selectFriendList" parameterType="String" resultType="member">
		select 
			* 
		from 
			member 
		where id in (
			select 
				friendid 
			from 
				friend
			where 
				userid = #{value}
		)
	</select>
	
	<insert id="insertBoard" parameterType="board">
      INSERT INTO board
      (
          id, 
         title, 
         content,
         location,
         <if test="originalfile != null and savedfile != null">
         originalfile,
         savedfile,
         <if test="happiness+sadness+surprise+neutral != 0">
         happiness,
         sadness,
         surprise,
         neutral
         </if>
         </if>
      )
      VALUES
      (
         #{id},
         #{title},
         #{content},
         #{location},
         <if test="originalfile != null and savedfile != null">
         #{originalfile},
         #{savedfile},
         <if test="happiness+sadness+surprise+neutral != 0">
         #{happiness},
         #{sadness},
         #{surprise},
         #{neutral}
         </if>
         </if>
      )
   </insert>
   
	<select id="selectAllBoard" parameterType="String" resultType="board">
SELECT * FROM (
    SELECT
      board.*,
      row_number() over (ORDER BY board.id ASC) line_number
    FROM board where id in (select friendid from friend where userid= #{id}) or id=#{id}
  ) WHERE line_number BETWEEN 0 AND 3  ORDER BY line_number	</select>
  
	<select id="boardpaging"  resultType="board"><!-- parameterType="map" -->
	SELECT * FROM (
    SELECT
      board.*,
      row_number() over (ORDER BY board.id ASC) line_number
    FROM board where id in (select friendid from friend where userid= #{id}) or  id=#{id}
  ) WHERE line_number BETWEEN #{first} AND #{second}  ORDER BY line_number
  </select>
	<!-- 친구 목록 불러오기 -->
	<select id="selectMyFriendList" parameterType="String" resultType="Map">
      SELECT friendid userid
      FROM friend
      WHERE userid = #{userid}
   </select>
</mapper>